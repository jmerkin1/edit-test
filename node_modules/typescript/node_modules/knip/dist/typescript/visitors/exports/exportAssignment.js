import ts from 'typescript';
import { FIX_FLAGS } from '../../../constants.js';
import { getNodeType } from '../../ast-helpers.js';
import { isModule } from '../helpers.js';
import { exportVisitor as visit } from '../index.js';
export default visit(isModule, (node, { isFixExports }) => {
    if (ts.isExportAssignment(node)) {
        const pos = node.getChildAt(1).getStart();
        const fix = isFixExports ? [node.getStart(), node.getEnd() + 1, FIX_FLAGS.NONE] : undefined;
        const symbol = node.getSourceFile().locals?.get(node.expression.escapedText);
        const type = getNodeType(symbol?.valueDeclaration);
        return { node, symbol, identifier: 'default', type, pos, fix };
    }
});
